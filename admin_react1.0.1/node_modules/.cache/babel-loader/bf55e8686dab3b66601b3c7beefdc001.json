{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"data\", \"renderItem\", \"renderRawItem\", \"itemKey\", \"itemWidth\", \"ssr\", \"style\", \"className\", \"maxCount\", \"renderRest\", \"renderRawRest\", \"suffix\", \"component\", \"itemComponent\", \"onVisibleChange\"];\nimport * as React from 'react';\nimport { useState, useMemo, useCallback } from 'react';\nimport classNames from 'classnames';\nimport ResizeObserver from 'rc-resize-observer';\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport Item from './Item';\nimport { useBatchFrameState } from './hooks/useBatchFrameState';\nimport RawItem from './RawItem';\nexport var OverflowContext = /*#__PURE__*/React.createContext(null);\nvar RESPONSIVE = 'responsive';\nvar INVALIDATE = 'invalidate';\n\nfunction defaultRenderRest(omittedItems) {\n  return \"+ \".concat(omittedItems.length, \" ...\");\n}\n\nfunction Overflow(props, ref) {\n  var _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-overflow' : _props$prefixCls,\n      _props$data = props.data,\n      data = _props$data === void 0 ? [] : _props$data,\n      renderItem = props.renderItem,\n      renderRawItem = props.renderRawItem,\n      itemKey = props.itemKey,\n      _props$itemWidth = props.itemWidth,\n      itemWidth = _props$itemWidth === void 0 ? 10 : _props$itemWidth,\n      ssr = props.ssr,\n      style = props.style,\n      className = props.className,\n      maxCount = props.maxCount,\n      renderRest = props.renderRest,\n      renderRawRest = props.renderRawRest,\n      suffix = props.suffix,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      itemComponent = props.itemComponent,\n      onVisibleChange = props.onVisibleChange,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var createUseState = useBatchFrameState();\n  var fullySSR = ssr === 'full';\n\n  var _createUseState = createUseState(null),\n      _createUseState2 = _slicedToArray(_createUseState, 2),\n      containerWidth = _createUseState2[0],\n      setContainerWidth = _createUseState2[1];\n\n  var mergedContainerWidth = containerWidth || 0;\n\n  var _createUseState3 = createUseState(new Map()),\n      _createUseState4 = _slicedToArray(_createUseState3, 2),\n      itemWidths = _createUseState4[0],\n      setItemWidths = _createUseState4[1];\n\n  var _createUseState5 = createUseState(0),\n      _createUseState6 = _slicedToArray(_createUseState5, 2),\n      prevRestWidth = _createUseState6[0],\n      setPrevRestWidth = _createUseState6[1];\n\n  var _createUseState7 = createUseState(0),\n      _createUseState8 = _slicedToArray(_createUseState7, 2),\n      restWidth = _createUseState8[0],\n      setRestWidth = _createUseState8[1];\n\n  var _createUseState9 = createUseState(0),\n      _createUseState10 = _slicedToArray(_createUseState9, 2),\n      suffixWidth = _createUseState10[0],\n      setSuffixWidth = _createUseState10[1];\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      suffixFixedStart = _useState2[0],\n      setSuffixFixedStart = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displayCount = _useState4[0],\n      setDisplayCount = _useState4[1];\n\n  var mergedDisplayCount = React.useMemo(function () {\n    if (displayCount === null && fullySSR) {\n      return Number.MAX_SAFE_INTEGER;\n    }\n\n    return displayCount || 0;\n  }, [displayCount, containerWidth]);\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      restReady = _useState6[0],\n      setRestReady = _useState6[1];\n\n  var itemPrefixCls = \"\".concat(prefixCls, \"-item\"); // Always use the max width to avoid blink\n\n  var mergedRestWidth = Math.max(prevRestWidth, restWidth); // ================================= Data =================================\n\n  var isResponsive = maxCount === RESPONSIVE;\n  var shouldResponsive = data.length && isResponsive;\n  var invalidate = maxCount === INVALIDATE;\n  /**\r\n   * When is `responsive`, we will always render rest node to get the real width of it for calculation\r\n   */\n\n  var showRest = shouldResponsive || typeof maxCount === 'number' && data.length > maxCount;\n  var mergedData = useMemo(function () {\n    var items = data;\n\n    if (shouldResponsive) {\n      if (containerWidth === null && fullySSR) {\n        items = data;\n      } else {\n        items = data.slice(0, Math.min(data.length, mergedContainerWidth / itemWidth));\n      }\n    } else if (typeof maxCount === 'number') {\n      items = data.slice(0, maxCount);\n    }\n\n    return items;\n  }, [data, itemWidth, containerWidth, maxCount, shouldResponsive]);\n  var omittedItems = useMemo(function () {\n    if (shouldResponsive) {\n      return data.slice(mergedDisplayCount + 1);\n    }\n\n    return data.slice(mergedData.length);\n  }, [data, mergedData, shouldResponsive, mergedDisplayCount]); // ================================= Item =================================\n\n  var getKey = useCallback(function (item, index) {\n    var _ref;\n\n    if (typeof itemKey === 'function') {\n      return itemKey(item);\n    }\n\n    return (_ref = itemKey && (item === null || item === void 0 ? void 0 : item[itemKey])) !== null && _ref !== void 0 ? _ref : index;\n  }, [itemKey]);\n  var mergedRenderItem = useCallback(renderItem || function (item) {\n    return item;\n  }, [renderItem]);\n\n  function updateDisplayCount(count, suffixFixedStartVal, notReady) {\n    // React 18 will sync render even when the value is same in some case.\n    // We take `mergedData` as deps which may cause dead loop if it's dynamic generate.\n    // ref: https://github.com/ant-design/ant-design/issues/36559\n    if (displayCount === count && (suffixFixedStartVal === undefined || suffixFixedStartVal === suffixFixedStart)) {\n      return;\n    }\n\n    setDisplayCount(count);\n\n    if (!notReady) {\n      setRestReady(count < data.length - 1);\n      onVisibleChange === null || onVisibleChange === void 0 ? void 0 : onVisibleChange(count);\n    }\n\n    if (suffixFixedStartVal !== undefined) {\n      setSuffixFixedStart(suffixFixedStartVal);\n    }\n  } // ================================= Size =================================\n\n\n  function onOverflowResize(_, element) {\n    setContainerWidth(element.clientWidth);\n  }\n\n  function registerSize(key, width) {\n    setItemWidths(function (origin) {\n      var clone = new Map(origin);\n\n      if (width === null) {\n        clone.delete(key);\n      } else {\n        clone.set(key, width);\n      }\n\n      return clone;\n    });\n  }\n\n  function registerOverflowSize(_, width) {\n    setRestWidth(width);\n    setPrevRestWidth(restWidth);\n  }\n\n  function registerSuffixSize(_, width) {\n    setSuffixWidth(width);\n  } // ================================ Effect ================================\n\n\n  function getItemWidth(index) {\n    return itemWidths.get(getKey(mergedData[index], index));\n  }\n\n  useLayoutEffect(function () {\n    if (mergedContainerWidth && mergedRestWidth && mergedData) {\n      var totalWidth = suffixWidth;\n      var len = mergedData.length;\n      var lastIndex = len - 1; // When data count change to 0, reset this since not loop will reach\n\n      if (!len) {\n        updateDisplayCount(0, null);\n        return;\n      }\n\n      for (var i = 0; i < len; i += 1) {\n        var currentItemWidth = getItemWidth(i); // Fully will always render\n\n        if (fullySSR) {\n          currentItemWidth = currentItemWidth || 0;\n        } // Break since data not ready\n\n\n        if (currentItemWidth === undefined) {\n          updateDisplayCount(i - 1, undefined, true);\n          break;\n        } // Find best match\n\n\n        totalWidth += currentItemWidth;\n\n        if ( // Only one means `totalWidth` is the final width\n        lastIndex === 0 && totalWidth <= mergedContainerWidth || // Last two width will be the final width\n        i === lastIndex - 1 && totalWidth + getItemWidth(lastIndex) <= mergedContainerWidth) {\n          // Additional check if match the end\n          updateDisplayCount(lastIndex, null);\n          break;\n        } else if (totalWidth + mergedRestWidth > mergedContainerWidth) {\n          // Can not hold all the content to show rest\n          updateDisplayCount(i - 1, totalWidth - currentItemWidth - suffixWidth + restWidth);\n          break;\n        }\n      }\n\n      if (suffix && getItemWidth(0) + suffixWidth > mergedContainerWidth) {\n        setSuffixFixedStart(null);\n      }\n    }\n  }, [mergedContainerWidth, itemWidths, restWidth, suffixWidth, getKey, mergedData]); // ================================ Render ================================\n\n  var displayRest = restReady && !!omittedItems.length;\n  var suffixStyle = {};\n\n  if (suffixFixedStart !== null && shouldResponsive) {\n    suffixStyle = {\n      position: 'absolute',\n      left: suffixFixedStart,\n      top: 0\n    };\n  }\n\n  var itemSharedProps = {\n    prefixCls: itemPrefixCls,\n    responsive: shouldResponsive,\n    component: itemComponent,\n    invalidate: invalidate\n  }; // >>>>> Choice render fun by `renderRawItem`\n\n  var internalRenderItemNode = renderRawItem ? function (item, index) {\n    var key = getKey(item, index);\n    return /*#__PURE__*/React.createElement(OverflowContext.Provider, {\n      key: key,\n      value: _objectSpread(_objectSpread({}, itemSharedProps), {}, {\n        order: index,\n        item: item,\n        itemKey: key,\n        registerSize: registerSize,\n        display: index <= mergedDisplayCount\n      })\n    }, renderRawItem(item, index));\n  } : function (item, index) {\n    var key = getKey(item, index);\n    return /*#__PURE__*/React.createElement(Item, _extends({}, itemSharedProps, {\n      order: index,\n      key: key,\n      item: item,\n      renderItem: mergedRenderItem,\n      itemKey: key,\n      registerSize: registerSize,\n      display: index <= mergedDisplayCount\n    }));\n  }; // >>>>> Rest node\n\n  var restNode;\n  var restContextProps = {\n    order: displayRest ? mergedDisplayCount : Number.MAX_SAFE_INTEGER,\n    className: \"\".concat(itemPrefixCls, \"-rest\"),\n    registerSize: registerOverflowSize,\n    display: displayRest\n  };\n\n  if (!renderRawRest) {\n    var mergedRenderRest = renderRest || defaultRenderRest;\n    restNode = /*#__PURE__*/React.createElement(Item, _extends({}, itemSharedProps, restContextProps), typeof mergedRenderRest === 'function' ? mergedRenderRest(omittedItems) : mergedRenderRest);\n  } else if (renderRawRest) {\n    restNode = /*#__PURE__*/React.createElement(OverflowContext.Provider, {\n      value: _objectSpread(_objectSpread({}, itemSharedProps), restContextProps)\n    }, renderRawRest(omittedItems));\n  }\n\n  var overflowNode = /*#__PURE__*/React.createElement(Component, _extends({\n    className: classNames(!invalidate && prefixCls, className),\n    style: style,\n    ref: ref\n  }, restProps), mergedData.map(internalRenderItemNode), showRest ? restNode : null, suffix && /*#__PURE__*/React.createElement(Item, _extends({}, itemSharedProps, {\n    responsive: isResponsive,\n    responsiveDisabled: !shouldResponsive,\n    order: mergedDisplayCount,\n    className: \"\".concat(itemPrefixCls, \"-suffix\"),\n    registerSize: registerSuffixSize,\n    display: true,\n    style: suffixStyle\n  }), suffix));\n\n  if (isResponsive) {\n    overflowNode = /*#__PURE__*/React.createElement(ResizeObserver, {\n      onResize: onOverflowResize,\n      disabled: !shouldResponsive\n    }, overflowNode);\n  }\n\n  return overflowNode;\n}\n\nvar ForwardOverflow = /*#__PURE__*/React.forwardRef(Overflow);\nForwardOverflow.displayName = 'Overflow';\nForwardOverflow.Item = RawItem;\nForwardOverflow.RESPONSIVE = RESPONSIVE;\nForwardOverflow.INVALIDATE = INVALIDATE; // Convert to generic type\n\nexport default ForwardOverflow;","map":{"version":3,"names":["_extends","_objectSpread","_slicedToArray","_objectWithoutProperties","_excluded","React","useState","useMemo","useCallback","classNames","ResizeObserver","useLayoutEffect","Item","useBatchFrameState","RawItem","OverflowContext","createContext","RESPONSIVE","INVALIDATE","defaultRenderRest","omittedItems","concat","length","Overflow","props","ref","_props$prefixCls","prefixCls","_props$data","data","renderItem","renderRawItem","itemKey","_props$itemWidth","itemWidth","ssr","style","className","maxCount","renderRest","renderRawRest","suffix","_props$component","component","Component","itemComponent","onVisibleChange","restProps","createUseState","fullySSR","_createUseState","_createUseState2","containerWidth","setContainerWidth","mergedContainerWidth","_createUseState3","Map","_createUseState4","itemWidths","setItemWidths","_createUseState5","_createUseState6","prevRestWidth","setPrevRestWidth","_createUseState7","_createUseState8","restWidth","setRestWidth","_createUseState9","_createUseState10","suffixWidth","setSuffixWidth","_useState","_useState2","suffixFixedStart","setSuffixFixedStart","_useState3","_useState4","displayCount","setDisplayCount","mergedDisplayCount","Number","MAX_SAFE_INTEGER","_useState5","_useState6","restReady","setRestReady","itemPrefixCls","mergedRestWidth","Math","max","isResponsive","shouldResponsive","invalidate","showRest","mergedData","items","slice","min","getKey","item","index","_ref","mergedRenderItem","updateDisplayCount","count","suffixFixedStartVal","notReady","undefined","onOverflowResize","_","element","clientWidth","registerSize","key","width","origin","clone","delete","set","registerOverflowSize","registerSuffixSize","getItemWidth","get","totalWidth","len","lastIndex","i","currentItemWidth","displayRest","suffixStyle","position","left","top","itemSharedProps","responsive","internalRenderItemNode","createElement","Provider","value","order","display","restNode","restContextProps","mergedRenderRest","overflowNode","map","responsiveDisabled","onResize","disabled","ForwardOverflow","forwardRef","displayName"],"sources":["C:/Users/59581/Desktop/yurritaStorw/admin_react1.0.1/node_modules/rc-overflow/es/Overflow.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\r\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nvar _excluded = [\"prefixCls\", \"data\", \"renderItem\", \"renderRawItem\", \"itemKey\", \"itemWidth\", \"ssr\", \"style\", \"className\", \"maxCount\", \"renderRest\", \"renderRawRest\", \"suffix\", \"component\", \"itemComponent\", \"onVisibleChange\"];\r\nimport * as React from 'react';\r\nimport { useState, useMemo, useCallback } from 'react';\r\nimport classNames from 'classnames';\r\nimport ResizeObserver from 'rc-resize-observer';\r\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\r\nimport Item from './Item';\r\nimport { useBatchFrameState } from './hooks/useBatchFrameState';\r\nimport RawItem from './RawItem';\r\nexport var OverflowContext = /*#__PURE__*/React.createContext(null);\r\nvar RESPONSIVE = 'responsive';\r\nvar INVALIDATE = 'invalidate';\r\n\r\nfunction defaultRenderRest(omittedItems) {\r\n  return \"+ \".concat(omittedItems.length, \" ...\");\r\n}\r\n\r\nfunction Overflow(props, ref) {\r\n  var _props$prefixCls = props.prefixCls,\r\n      prefixCls = _props$prefixCls === void 0 ? 'rc-overflow' : _props$prefixCls,\r\n      _props$data = props.data,\r\n      data = _props$data === void 0 ? [] : _props$data,\r\n      renderItem = props.renderItem,\r\n      renderRawItem = props.renderRawItem,\r\n      itemKey = props.itemKey,\r\n      _props$itemWidth = props.itemWidth,\r\n      itemWidth = _props$itemWidth === void 0 ? 10 : _props$itemWidth,\r\n      ssr = props.ssr,\r\n      style = props.style,\r\n      className = props.className,\r\n      maxCount = props.maxCount,\r\n      renderRest = props.renderRest,\r\n      renderRawRest = props.renderRawRest,\r\n      suffix = props.suffix,\r\n      _props$component = props.component,\r\n      Component = _props$component === void 0 ? 'div' : _props$component,\r\n      itemComponent = props.itemComponent,\r\n      onVisibleChange = props.onVisibleChange,\r\n      restProps = _objectWithoutProperties(props, _excluded);\r\n\r\n  var createUseState = useBatchFrameState();\r\n  var fullySSR = ssr === 'full';\r\n\r\n  var _createUseState = createUseState(null),\r\n      _createUseState2 = _slicedToArray(_createUseState, 2),\r\n      containerWidth = _createUseState2[0],\r\n      setContainerWidth = _createUseState2[1];\r\n\r\n  var mergedContainerWidth = containerWidth || 0;\r\n\r\n  var _createUseState3 = createUseState(new Map()),\r\n      _createUseState4 = _slicedToArray(_createUseState3, 2),\r\n      itemWidths = _createUseState4[0],\r\n      setItemWidths = _createUseState4[1];\r\n\r\n  var _createUseState5 = createUseState(0),\r\n      _createUseState6 = _slicedToArray(_createUseState5, 2),\r\n      prevRestWidth = _createUseState6[0],\r\n      setPrevRestWidth = _createUseState6[1];\r\n\r\n  var _createUseState7 = createUseState(0),\r\n      _createUseState8 = _slicedToArray(_createUseState7, 2),\r\n      restWidth = _createUseState8[0],\r\n      setRestWidth = _createUseState8[1];\r\n\r\n  var _createUseState9 = createUseState(0),\r\n      _createUseState10 = _slicedToArray(_createUseState9, 2),\r\n      suffixWidth = _createUseState10[0],\r\n      setSuffixWidth = _createUseState10[1];\r\n\r\n  var _useState = useState(null),\r\n      _useState2 = _slicedToArray(_useState, 2),\r\n      suffixFixedStart = _useState2[0],\r\n      setSuffixFixedStart = _useState2[1];\r\n\r\n  var _useState3 = useState(null),\r\n      _useState4 = _slicedToArray(_useState3, 2),\r\n      displayCount = _useState4[0],\r\n      setDisplayCount = _useState4[1];\r\n\r\n  var mergedDisplayCount = React.useMemo(function () {\r\n    if (displayCount === null && fullySSR) {\r\n      return Number.MAX_SAFE_INTEGER;\r\n    }\r\n\r\n    return displayCount || 0;\r\n  }, [displayCount, containerWidth]);\r\n\r\n  var _useState5 = useState(false),\r\n      _useState6 = _slicedToArray(_useState5, 2),\r\n      restReady = _useState6[0],\r\n      setRestReady = _useState6[1];\r\n\r\n  var itemPrefixCls = \"\".concat(prefixCls, \"-item\"); // Always use the max width to avoid blink\r\n\r\n  var mergedRestWidth = Math.max(prevRestWidth, restWidth); // ================================= Data =================================\r\n\r\n  var isResponsive = maxCount === RESPONSIVE;\r\n  var shouldResponsive = data.length && isResponsive;\r\n  var invalidate = maxCount === INVALIDATE;\r\n  /**\r\n   * When is `responsive`, we will always render rest node to get the real width of it for calculation\r\n   */\r\n\r\n  var showRest = shouldResponsive || typeof maxCount === 'number' && data.length > maxCount;\r\n  var mergedData = useMemo(function () {\r\n    var items = data;\r\n\r\n    if (shouldResponsive) {\r\n      if (containerWidth === null && fullySSR) {\r\n        items = data;\r\n      } else {\r\n        items = data.slice(0, Math.min(data.length, mergedContainerWidth / itemWidth));\r\n      }\r\n    } else if (typeof maxCount === 'number') {\r\n      items = data.slice(0, maxCount);\r\n    }\r\n\r\n    return items;\r\n  }, [data, itemWidth, containerWidth, maxCount, shouldResponsive]);\r\n  var omittedItems = useMemo(function () {\r\n    if (shouldResponsive) {\r\n      return data.slice(mergedDisplayCount + 1);\r\n    }\r\n\r\n    return data.slice(mergedData.length);\r\n  }, [data, mergedData, shouldResponsive, mergedDisplayCount]); // ================================= Item =================================\r\n\r\n  var getKey = useCallback(function (item, index) {\r\n    var _ref;\r\n\r\n    if (typeof itemKey === 'function') {\r\n      return itemKey(item);\r\n    }\r\n\r\n    return (_ref = itemKey && (item === null || item === void 0 ? void 0 : item[itemKey])) !== null && _ref !== void 0 ? _ref : index;\r\n  }, [itemKey]);\r\n  var mergedRenderItem = useCallback(renderItem || function (item) {\r\n    return item;\r\n  }, [renderItem]);\r\n\r\n  function updateDisplayCount(count, suffixFixedStartVal, notReady) {\r\n    // React 18 will sync render even when the value is same in some case.\r\n    // We take `mergedData` as deps which may cause dead loop if it's dynamic generate.\r\n    // ref: https://github.com/ant-design/ant-design/issues/36559\r\n    if (displayCount === count && (suffixFixedStartVal === undefined || suffixFixedStartVal === suffixFixedStart)) {\r\n      return;\r\n    }\r\n\r\n    setDisplayCount(count);\r\n\r\n    if (!notReady) {\r\n      setRestReady(count < data.length - 1);\r\n      onVisibleChange === null || onVisibleChange === void 0 ? void 0 : onVisibleChange(count);\r\n    }\r\n\r\n    if (suffixFixedStartVal !== undefined) {\r\n      setSuffixFixedStart(suffixFixedStartVal);\r\n    }\r\n  } // ================================= Size =================================\r\n\r\n\r\n  function onOverflowResize(_, element) {\r\n    setContainerWidth(element.clientWidth);\r\n  }\r\n\r\n  function registerSize(key, width) {\r\n    setItemWidths(function (origin) {\r\n      var clone = new Map(origin);\r\n\r\n      if (width === null) {\r\n        clone.delete(key);\r\n      } else {\r\n        clone.set(key, width);\r\n      }\r\n\r\n      return clone;\r\n    });\r\n  }\r\n\r\n  function registerOverflowSize(_, width) {\r\n    setRestWidth(width);\r\n    setPrevRestWidth(restWidth);\r\n  }\r\n\r\n  function registerSuffixSize(_, width) {\r\n    setSuffixWidth(width);\r\n  } // ================================ Effect ================================\r\n\r\n\r\n  function getItemWidth(index) {\r\n    return itemWidths.get(getKey(mergedData[index], index));\r\n  }\r\n\r\n  useLayoutEffect(function () {\r\n    if (mergedContainerWidth && mergedRestWidth && mergedData) {\r\n      var totalWidth = suffixWidth;\r\n      var len = mergedData.length;\r\n      var lastIndex = len - 1; // When data count change to 0, reset this since not loop will reach\r\n\r\n      if (!len) {\r\n        updateDisplayCount(0, null);\r\n        return;\r\n      }\r\n\r\n      for (var i = 0; i < len; i += 1) {\r\n        var currentItemWidth = getItemWidth(i); // Fully will always render\r\n\r\n        if (fullySSR) {\r\n          currentItemWidth = currentItemWidth || 0;\r\n        } // Break since data not ready\r\n\r\n\r\n        if (currentItemWidth === undefined) {\r\n          updateDisplayCount(i - 1, undefined, true);\r\n          break;\r\n        } // Find best match\r\n\r\n\r\n        totalWidth += currentItemWidth;\r\n\r\n        if ( // Only one means `totalWidth` is the final width\r\n        lastIndex === 0 && totalWidth <= mergedContainerWidth || // Last two width will be the final width\r\n        i === lastIndex - 1 && totalWidth + getItemWidth(lastIndex) <= mergedContainerWidth) {\r\n          // Additional check if match the end\r\n          updateDisplayCount(lastIndex, null);\r\n          break;\r\n        } else if (totalWidth + mergedRestWidth > mergedContainerWidth) {\r\n          // Can not hold all the content to show rest\r\n          updateDisplayCount(i - 1, totalWidth - currentItemWidth - suffixWidth + restWidth);\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (suffix && getItemWidth(0) + suffixWidth > mergedContainerWidth) {\r\n        setSuffixFixedStart(null);\r\n      }\r\n    }\r\n  }, [mergedContainerWidth, itemWidths, restWidth, suffixWidth, getKey, mergedData]); // ================================ Render ================================\r\n\r\n  var displayRest = restReady && !!omittedItems.length;\r\n  var suffixStyle = {};\r\n\r\n  if (suffixFixedStart !== null && shouldResponsive) {\r\n    suffixStyle = {\r\n      position: 'absolute',\r\n      left: suffixFixedStart,\r\n      top: 0\r\n    };\r\n  }\r\n\r\n  var itemSharedProps = {\r\n    prefixCls: itemPrefixCls,\r\n    responsive: shouldResponsive,\r\n    component: itemComponent,\r\n    invalidate: invalidate\r\n  }; // >>>>> Choice render fun by `renderRawItem`\r\n\r\n  var internalRenderItemNode = renderRawItem ? function (item, index) {\r\n    var key = getKey(item, index);\r\n    return /*#__PURE__*/React.createElement(OverflowContext.Provider, {\r\n      key: key,\r\n      value: _objectSpread(_objectSpread({}, itemSharedProps), {}, {\r\n        order: index,\r\n        item: item,\r\n        itemKey: key,\r\n        registerSize: registerSize,\r\n        display: index <= mergedDisplayCount\r\n      })\r\n    }, renderRawItem(item, index));\r\n  } : function (item, index) {\r\n    var key = getKey(item, index);\r\n    return /*#__PURE__*/React.createElement(Item, _extends({}, itemSharedProps, {\r\n      order: index,\r\n      key: key,\r\n      item: item,\r\n      renderItem: mergedRenderItem,\r\n      itemKey: key,\r\n      registerSize: registerSize,\r\n      display: index <= mergedDisplayCount\r\n    }));\r\n  }; // >>>>> Rest node\r\n\r\n  var restNode;\r\n  var restContextProps = {\r\n    order: displayRest ? mergedDisplayCount : Number.MAX_SAFE_INTEGER,\r\n    className: \"\".concat(itemPrefixCls, \"-rest\"),\r\n    registerSize: registerOverflowSize,\r\n    display: displayRest\r\n  };\r\n\r\n  if (!renderRawRest) {\r\n    var mergedRenderRest = renderRest || defaultRenderRest;\r\n    restNode = /*#__PURE__*/React.createElement(Item, _extends({}, itemSharedProps, restContextProps), typeof mergedRenderRest === 'function' ? mergedRenderRest(omittedItems) : mergedRenderRest);\r\n  } else if (renderRawRest) {\r\n    restNode = /*#__PURE__*/React.createElement(OverflowContext.Provider, {\r\n      value: _objectSpread(_objectSpread({}, itemSharedProps), restContextProps)\r\n    }, renderRawRest(omittedItems));\r\n  }\r\n\r\n  var overflowNode = /*#__PURE__*/React.createElement(Component, _extends({\r\n    className: classNames(!invalidate && prefixCls, className),\r\n    style: style,\r\n    ref: ref\r\n  }, restProps), mergedData.map(internalRenderItemNode), showRest ? restNode : null, suffix && /*#__PURE__*/React.createElement(Item, _extends({}, itemSharedProps, {\r\n    responsive: isResponsive,\r\n    responsiveDisabled: !shouldResponsive,\r\n    order: mergedDisplayCount,\r\n    className: \"\".concat(itemPrefixCls, \"-suffix\"),\r\n    registerSize: registerSuffixSize,\r\n    display: true,\r\n    style: suffixStyle\r\n  }), suffix));\r\n\r\n  if (isResponsive) {\r\n    overflowNode = /*#__PURE__*/React.createElement(ResizeObserver, {\r\n      onResize: onOverflowResize,\r\n      disabled: !shouldResponsive\r\n    }, overflowNode);\r\n  }\r\n\r\n  return overflowNode;\r\n}\r\n\r\nvar ForwardOverflow = /*#__PURE__*/React.forwardRef(Overflow);\r\nForwardOverflow.displayName = 'Overflow';\r\nForwardOverflow.Item = RawItem;\r\nForwardOverflow.RESPONSIVE = RESPONSIVE;\r\nForwardOverflow.INVALIDATE = INVALIDATE; // Convert to generic type\r\n\r\nexport default ForwardOverflow;"],"mappings":"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"},"metadata":{},"sourceType":"module"}